<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           width="100%"
           height="100%"
           creationComplete="onCreationComplete()"
           xmlns:component="org.adaptiveplatform.surveys.view.usermanagement.*">
    <mx:Script>
        <![CDATA[
            import flash.events.Event;
            
            import flexunit.flexui.controls.right.SelectedTestCaseForm;
            
            import mx.binding.utils.BindingUtils;
            import mx.collections.ArrayCollection;
            import mx.controls.Alert;
            import mx.events.CollectionEvent;
            import mx.events.FlexEvent;
            import mx.events.ListEvent;
            import mx.rpc.Fault;
            
            import org.adaptiveplatform.surveys.application.BusinessExceptionHandler;
            import org.adaptiveplatform.surveys.application.ContextFactory;
            import org.adaptiveplatform.surveys.application.UserRole;
            import org.adaptiveplatform.surveys.application.ViewController;
            import org.adaptiveplatform.surveys.application.generated.UserDao;
            import org.adaptiveplatform.surveys.application.generated.UserFacade;
            import org.adaptiveplatform.surveys.dto.generated.ChangePasswordCommand;
            import org.adaptiveplatform.surveys.dto.generated.UserDto;
            import org.adaptiveplatform.surveys.dto.generated.UserQuery;

            private var userDao:UserDao;
            private var view:ViewController;
            private var userFacade:UserFacade;

            [Bindable]
            public var user:UserDto;

            [Bindable]
            public var currentUser:String;

            private function onCreationComplete():void {
                userDao=ContextFactory.context.service.userDao;
                view=ContextFactory.context.view;
                currentUser=ContextFactory.context.service.authentication.currentUser;
                userFacade=ContextFactory.context.service.userFacade;
            }

            public function initializeView(ignore:*=null):void {
                search(null);
            }


            private function onChangeRoleSuccess(result:Object):void {
                usersList.refreshData();
            }


            private function search(queryString:String):void {
                user=null;
                var userQuery:UserQuery=new UserQuery();
                userQuery.nameContains=queryString;
                userDao.query(userQuery) //
                    .onSuccess(function(result:ArrayCollection):void {
                        for each (var userFromList:UserDto in result) {
                            userFromList.roles.addEventListener(CollectionEvent.COLLECTION_CHANGE, function():void {
                                userFacade.setUserRoles(user.email, user.roles).onSuccess(onChangeRoleSuccess);
                            });
                        }
                        usersList.dataProvider=result;
                    }).onFault(BusinessExceptionHandler.displayAlert(resourceManager));
            }

            private function changePasswordHandler(event:ChangePasswordEvent):void {
                var command:ChangePasswordCommand=new ChangePasswordCommand();
                command.email=user.email;
                command.newPassword=event.newPassword;
                userFacade.changePassword(command).onSuccess(function():void {
                    Alert.show("password changed");
                }).onFault(function(fault:Fault):void {
                    Alert.show(fault.faultString, ""+fault.errorID);
                });
            }
        ]]>
    </mx:Script>
    <component:UserSearchBar x="0"
                             y="0"
                             width="59.5%"
                             userSearch="search(event.searchQuery)"/>
    <mx:HBox x="0"
             y="50"
             width="100%"
             height="100%">
        <component:UsersList id="usersList"
                             width="60%"
                             height="100%"
                             userSelected="user = event.selectedUser"/>

        <component:UserDetails width="40%"
                               height="100%"
                               roles="{UserRole.allRoles}"
                               user="{user}"
                               currentUser="{currentUser}"
                               changePassword="changePasswordHandler(event)"/>
    </mx:HBox>
</mx:Canvas>
