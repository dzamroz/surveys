<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:comp="adaptlearning.view.components.*"
			  width="100%" height="100%" xmlns:components="org.adaptiveplatform.surveys.view.components.*" >
	<mx:Script>
		<![CDATA[
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.ChildExistenceChangedEvent;
			import mx.events.FlexEvent;
			
			import org.adaptiveplatform.surveys.dto.generated.FilledSurveyDto;
			import org.adaptiveplatform.surveys.dto.generated.SurveyQuestionDto;
			
			[Bindable]
			public var isQuestionsAnsweredList:ArrayCollection;
			
			[Bindable]
			public var selectedIndex:int = 0;
			
			[Bindable]
			private var wasNewQuestionsSet:Boolean = true;

			[Bindable]
			private var _questions:ArrayCollection; // of SurveyQuestionDto 
			
			[Bindable]
			public var survey:FilledSurveyDto;
			
			private var questionsPositions:ArrayCollection = new ArrayCollection();

			private function measureQuestionComponents():void {
				if( wasNewQuestionsSet ){
					wasNewQuestionsSet = false;
					questionsPositions.removeAll();
					var positionOfScroll:int = 0;
					for( var i:int = 0; i < questions.length; i++ ) {
						questionsPositions.addItem( positionOfScroll );
						positionOfScroll += this.getChildAt( i ).height + paddingSize;
					}
				}
			}
			
			public function set questions( value:ArrayCollection ):void{
				if( value != _questions ){
					wasNewQuestionsSet = true;
					_questions = value;
					selectedIndex = 0;
				}
			}

			[Bindable]
			public function get questions( ):ArrayCollection{
				return _questions;
			}

			public function previous():void {
				if (selectedIndex > 0) {
					selectedIndex--;
				}
			}

			public function next():void {
				if (selectedIndex < numChildren - 1) {
					selectedIndex++;
				}
			}

			public function get currentQuestion():SurveyQuestionDto {
				if (questions.length > 0) {
					return questions[selectedIndex];
				}
				return null;
			}
			
			private static const paddingSize:int = 6;
			
			public function calculateQuestionPos( index:int ):int{
				measureQuestionComponents();
				return questionsPositions.getItemAt( index ) as int;
			}
			
			public function calculateQuestionIndex( pos:int ):int{
				measureQuestionComponents();
				for( var i:int = 0; i < this.getChildren().length; i++ ){
					if( pos <= questionsPositions.getItemAt( i ) ){
						return i;
					}
				}
				return i;
			}
						
		]]>
	</mx:Script>
	<mx:Repeater id="questionsComponents" dataProvider="{_questions}" width="100%" >
		<components:AnswerQuestionComponent width="100%"  
			question="{questionsComponents.currentItem}" 
			survey="{survey}"
			isQuestionsAnsweredList="{isQuestionsAnsweredList}"/>
	</mx:Repeater>
</mx:VBox>
