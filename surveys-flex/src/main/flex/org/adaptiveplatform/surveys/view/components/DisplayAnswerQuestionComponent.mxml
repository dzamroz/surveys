<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
		 xmlns:components="adaptlearning.view.components.*"
		 creationComplete="onCreationComplete()"
		 width="100%">
	<mx:Script>
		<![CDATA[
			import org.adaptiveplatform.surveys.application.ApplicationContextHolder;
			import org.adaptiveplatform.surveys.view.renderers.QuestionTypeItemRenderer;
			
			import flash.events.KeyboardEvent;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.containers.HBox;
			import mx.controls.Alert;
			import mx.controls.Label;
			import mx.controls.Text;
			import mx.controls.TextArea;
			import mx.controls.TextInput;
			import mx.core.IFlexDisplayObject;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			
			import org.adaptiveplatform.surveys.dto.generated.FilledSurveyDto;

			public var survey:FilledSurveyDto;

			[Bindable]
			private var _question:Object;
			
			public function set question(q:Object):void{
				_question=q;
				answersComponent.removeAllChildren();
				initializeAnswers()
			}
			
			public function get question():Object {
				return _question;
			}

			private function initializeAnswers():void {
				for each (var answer:Object in _question.answers) {
					var container:HBox=new HBox();
					answersComponent.addChild(container);
					var type:QuestionTypeItemRenderer=new QuestionTypeItemRenderer();
					type.width=16;
					type.data=_question;
					container.addChild(type);
					var answerComponent:Label=new Label();
					answerComponent.text=answer.text;
					answerComponent.percentWidth=100;
					container.addChild(answerComponent);
				}
			}

			private function onCreationComplete():void {
				//initializeAnswers();
			}
		]]>
	</mx:Script>
	<mx:Text enabled="false"
			 htmlText="{_question.text}"
			 width="100%"/>
	<mx:Repeater>

	</mx:Repeater>
	<mx:VBox id="answersComponent"
			 paddingLeft="20"
			 paddingRight="20"
			 width="100%"/>
</mx:VBox>
