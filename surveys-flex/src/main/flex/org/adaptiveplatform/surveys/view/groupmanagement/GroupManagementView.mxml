<?xml version="1.0" encoding="utf-8"?>
<mx:HBox xmlns:mx="http://www.adobe.com/2006/mxml"
         xmlns:renderers="org.adaptiveplatform.surveys.view.renderers.*"
         xmlns:component="org.adaptiveplatform.surveys.view.groupmanagement.*"
         width="100%"
         height="100%"
         creationComplete="onCreationComplete()"
         verticalAlign="middle"
         verticalScrollPolicy="off"
         horizontalScrollPolicy="off">
    <mx:Script>
        <![CDATA[
            import mx.collections.ArrayCollection;
            import mx.events.ValidationResultEvent;
            import mx.validators.ValidationResult;
            
            import org.adaptiveplatform.surveys.application.BusinessExceptionHandler;
            import org.adaptiveplatform.surveys.application.ContextFactory;
            import org.adaptiveplatform.surveys.application.generated.StudentGroupDao;
            import org.adaptiveplatform.surveys.application.generated.StudentGroupFacade;
            import org.adaptiveplatform.surveys.dto.generated.CreateStudentGroupCommand;
            import org.adaptiveplatform.surveys.dto.generated.GroupRoleEnum;
            import org.adaptiveplatform.surveys.dto.generated.StudentGroupDto;
            import org.adaptiveplatform.surveys.dto.generated.StudentGroupQuery;

            [Bindable]
            private var model:GroupManagementModel;

            private function onCreationComplete():void {
                var studentGroupFacade:StudentGroupFacade=ContextFactory.context.service.studentGroupFacade;
                var groupDao:StudentGroupDao=ContextFactory.context.service.studentGroupDao;
                model=new GroupManagementModel(studentGroupFacade, groupDao, resourceManager);                
                model.findGroups();
            }

            public function initializeView(ignore:*=null):void {
            }
        ]]>
    </mx:Script>
    <mx:StringValidator id="groupNameValidator"
                        required="true"
                        minLength="5"
                        source="{newGroupName}"
                        property="text"/>
    <mx:VBox width="50%"
             height="100%">
        <mx:ApplicationControlBar width="100%">
            <mx:Label text="{resourceManager.getString('adaptive', 'search')}:"/>
            <mx:TextInput id="cbxKeywordG"
                          width="100%"
                          text="{model.query.groupNamePattern}"
                          change="{model.query.groupNamePattern=cbxKeywordG.text}"
                          enter="model.findGroups()"/>
            <mx:Button label="{resourceManager.getString('adaptive', 'find')}"
                       toolTip="{resourceManager.getString('adaptive', 'find')}"
                       click="model.findGroups()"
                       icon="@Embed(source='/assets/icons/search.png')"/>
            <mx:Button id="groupResetBtn"
                       label="{resourceManager.getString('adaptive', 'reset')}"
                       toolTip="{resourceManager.getString('adaptive', 'reset')}"
                       click="model.resetGroup()"
                       icon="@Embed(source='/assets/icons/clear.png')"/>
        </mx:ApplicationControlBar>
        <component:GroupsList id="groupList"
                              width="100%"
                              height="100%"
                              dataProvider="{model.groups}"
							  groupSelected="model.selectedGroup=event.selectedGroup"/>
    </mx:VBox>
    <mx:VBox width="50%">
        <mx:HBox verticalAlign="middle"
                 width="100%">

            <mx:Label text="{resourceManager.getString('adaptive', 'groupManagement.newGroupName')}:"/>
            <mx:TextInput id="newGroupName"
                          width="100%"
                          text="{model.query.groupNamePattern}"
                          change="model.query.groupNamePattern = newGroupName.text"
                          enter="model.addGroup()"/>
            <mx:Button label="{resourceManager.getString('adaptive', 'groupManagement.addGroup')}"
                       toolTip="{resourceManager.getString('adaptive', 'groupManagement.addGroup')}"
                       click="model.addGroup()"
                       icon="@Embed(source='/assets/icons/add.png')"/>
            <mx:Button label="{resourceManager.getString('adaptive', 'groupManagement.removeGroup')}"
                       toolTip="{resourceManager.getString('adaptive', 'groupManagement.removeGroup')}"
                       click="model.removeGroup()"
                       icon="@Embed(source='/assets/icons/remove.png')"/>
        </mx:HBox>
        <component:GroupDetails group="{model.selectedGroup}"/>
    </mx:VBox>
</mx:HBox>
