<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%" 
	implements="org.adaptiveplatform.surveys.view.components.questions.QuestionComponent"
	creationComplete="create()" remove="remove()" xmlns:questions="org.adaptiveplatform.surveys.view.components.questions.*">
	
	<mx:Script>
		<![CDATA[
			import org.adaptiveplatform.surveys.QuestionStyleEnum;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			import org.adaptiveplatform.surveys.dto.generated.AnswerTemplateDto;
			import org.adaptiveplatform.surveys.dto.generated.QuestionTypeEnum;
			
			[Bindable]
			public var requireComment:Boolean;
			
			[Bindable]
			public var questionType:QuestionTypeEnum;
			
			[Bindable]
			public var questionStyle:QuestionStyleEnum;
			
			private var bindings:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var exampleAnswers:ArrayCollection = new ArrayCollection();
			
			private function create():void{
				questionStyle = QuestionStyleEnum.SINGLE_TYPE;
				createBindings();
				for(var i:int = 0; i < 4; i++){
					var answer:AnswerTemplateDto = new AnswerTemplateDto();
					answer.text = resourceManager.getString('adaptive', 'createQuestion.typeView.exampleAns') + i;
					exampleAnswers.addItem( answer );
				}
			}
			
			private function createBindings():void{
				bindings.addItem( BindingUtils.bindSetter( function():void{
					if( QuestionStyleEnum.SINGLE_TYPE.equals(questionStyle) ){
						questionAnswersPreview.selectedIndex = 1;
					}else{
						questionAnswersPreview.selectedIndex = 3;
					}
				}, this, "questionStyle" ) );
				bindings.addItem( BindingUtils.bindSetter( function():void{
					switch( questionType ){
						case QuestionTypeEnum.MULTIPLE_CHOICE:
							questionAnswersPreview.selectedIndex = 2;
							break;
						case QuestionTypeEnum.OPEN:
							questionAnswersPreview.selectedIndex = 0;
							break;
						case QuestionTypeEnum.SINGLE_CHOICE:
							if( QuestionStyleEnum.SINGLE_TYPE.equals(questionStyle) ){
								questionAnswersPreview.selectedIndex = 1;
							}else{
								questionAnswersPreview.selectedIndex = 3;
							}
					}
				}, this, "questionType" ) );
			}
			
			private function remove():void{
				for each( var watcher:ChangeWatcher in bindings){
					watcher.unwatch();
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:Box label="Question preview" width="100%" height="100%">
		<mx:VBox width="100%" height="100%" >
			<mx:Label text="{resourceManager.getString('adaptive', 'createQuestion.typeView.previewText')}" textAlign="center" width="100%" />
			<mx:HRule width="100%"/>
				<mx:TextArea id="questionExampleText" change="{questionExampleText.text = resourceManager.getString('adaptive', 'createQuestion.typeView.exampleQuest')}" 
					text="{resourceManager.getString('adaptive', 'createQuestion.typeView.exampleQuest')}" width="100%"/>
				<mx:ViewStack id="questionAnswersPreview" width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
					<questions:OpenType/>
					<questions:SingleSelectionType answers="{exampleAnswers}" verticalScrollPolicy="off"/>
					<questions:MultipleSelectionType answers="{exampleAnswers}" verticalScrollPolicy="off"/>
					<questions:FourToggleType answers="{exampleAnswers}" verticalScrollPolicy="off"/>
				</mx:ViewStack>
				<mx:HBox width="100%" includeInLayout="{requireComment &amp;&amp; (!questionType.equals(QuestionTypeEnum.OPEN))}" visible="{requireComment &amp;&amp; (!questionType.equals(QuestionTypeEnum.OPEN))}" >
					<mx:TextArea id="comment" text="{resourceManager.getString('adaptive', 'createQuestion.typeView.commentText')}" 
						change="{comment.text=resourceManager.getString('adaptive', 'createQuestion.typeView.commentText')}" width="100%" height="100%"/>
				</mx:HBox>
			<mx:HRule width="100%"/>
		</mx:VBox>
	</mx:Box>
	
</mx:Canvas>
