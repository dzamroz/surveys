package org.adaptiveplatform.surveys.application.generated {
	
  	import org.adaptiveplatform.surveys.dto.generated.CreateSurveyTemplateCommand;
  	import mx.collections.ArrayCollection;
	
	import org.adaptiveplatform.surveys.application.ResultHandler;
	import org.adaptiveplatform.surveys.application.AbstractRemoteService;
	
	import mx.messaging.ChannelSet;
	import mx.rpc.remoting.RemoteObject;

	/**
	 * NOTE: This file is autogenerated and will be overwritten every time.
	 */
	public class RemoteSurveyFacade extends AbstractRemoteService implements SurveyFacade{
			
		public function RemoteSurveyFacade(channels:ChannelSet) {
			super(channels, "surveyFacade");
		}
		
		public function submit(long:Number):ResultHandler{
			var service:RemoteObject = createService();
			service.submit(long);
			return createResponder(service);
		}
		public function removeSurveyTemplate(long:Number):ResultHandler{
			var service:RemoteObject = createService();
			service.removeSurveyTemplate(long);
			return createResponder(service);
		}
		public function createTemplate(createSurveyTemplateCommand:CreateSurveyTemplateCommand):ResultHandler{
			var service:RemoteObject = createService();
			service.createTemplate(createSurveyTemplateCommand);
			return createResponder(service);
		}
		public function updateTemplate(long:Number, createSurveyTemplateCommand:CreateSurveyTemplateCommand):ResultHandler{
			var service:RemoteObject = createService();
			service.updateTemplate(long, createSurveyTemplateCommand);
			return createResponder(service);
		}
		public function startFilling(long:Number):ResultHandler{
			var service:RemoteObject = createService();
			service.startFilling(long);
			return createResponder(service);
		}
		public function answerQuestion(long:Number, integer:int, list:ArrayCollection, string:String):ResultHandler{
			var service:RemoteObject = createService();
			service.answerQuestion(long, integer, list, string);
			return createResponder(service);
		}
	}
}
