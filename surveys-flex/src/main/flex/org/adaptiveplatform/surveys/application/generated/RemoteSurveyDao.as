package org.adaptiveplatform.surveys.application.generated {
	
  	import mx.collections.ArrayCollection;
  	import org.adaptiveplatform.surveys.dto.generated.FilledSurveyQuery;
  	import org.adaptiveplatform.surveys.dto.generated.SurveyTemplateDto;
  	import org.adaptiveplatform.surveys.dto.generated.FilledSurveyDto;
  	import org.adaptiveplatform.surveys.dto.generated.PublishedSurveyTemplateQuery;
  	import org.adaptiveplatform.surveys.dto.generated.SurveyTemplateQuery;
	
	import org.adaptiveplatform.surveys.application.ResultHandler;
	import org.adaptiveplatform.surveys.application.AbstractRemoteService;
	
	import mx.messaging.ChannelSet;
	import mx.rpc.remoting.RemoteObject;

	/**
	 * NOTE: This file is autogenerated and will be overwritten every time.
	 */
	public class RemoteSurveyDao extends AbstractRemoteService implements SurveyDao{
			
		public function RemoteSurveyDao(channels:ChannelSet) {
			super(channels, "surveyDao");
		}
		
		public function getTemplate(long:Number):ResultHandler{
			var service:RemoteObject = createService();
			service.getTemplate(long);
			return createResponder(service);
		}
		public function getSurvey(long:Number):ResultHandler{
			var service:RemoteObject = createService();
			service.getSurvey(long);
			return createResponder(service);
		}
		public function querySurveys(filledSurveyQuery:FilledSurveyQuery):ResultHandler{
			var service:RemoteObject = createService();
			service.querySurveys(filledSurveyQuery);
			return createResponder(service);
		}
		public function queryPublishedTemplates(publishedSurveyTemplateQuery:PublishedSurveyTemplateQuery):ResultHandler{
			var service:RemoteObject = createService();
			service.queryPublishedTemplates(publishedSurveyTemplateQuery);
			return createResponder(service);
		}
		public function queryTemplates(surveyTemplateQuery:SurveyTemplateQuery):ResultHandler{
			var service:RemoteObject = createService();
			service.queryTemplates(surveyTemplateQuery);
			return createResponder(service);
		}
	}
}
