package org.adaptiveplatform.surveys.application.generated {
	
  	import org.adaptiveplatform.surveys.dto.generated.PublishSurveyTemplateCommand;
  	import org.adaptiveplatform.surveys.dto.generated.CreateStudentGroupCommand;
  	import org.adaptiveplatform.surveys.dto.generated.ChangeSurveyPublicationCommand;
  	import org.adaptiveplatform.surveys.dto.generated.ChangeGroupMembersCommand;
	
	import org.adaptiveplatform.surveys.application.ResultHandler;
	import org.adaptiveplatform.surveys.application.AbstractRemoteService;
	
	import mx.messaging.ChannelSet;
	import mx.rpc.remoting.RemoteObject;

	/**
	 * NOTE: This file is autogenerated and will be overwritten every time.
	 */
	public class RemoteStudentGroupFacade extends AbstractRemoteService implements StudentGroupFacade{
			
		public function RemoteStudentGroupFacade(channels:ChannelSet) {
			super(channels, "studentGroupFacade");
		}
		
		public function createGroup(createStudentGroupCommand:CreateStudentGroupCommand):ResultHandler{
			var service:RemoteObject = createService();
			service.createGroup(createStudentGroupCommand);
			return createResponder(service);
		}
		public function assignSurveyTemplate(publishSurveyTemplateCommand:PublishSurveyTemplateCommand):ResultHandler{
			var service:RemoteObject = createService();
			service.assignSurveyTemplate(publishSurveyTemplateCommand);
			return createResponder(service);
		}
		public function removeSurveyTemplate(long:Number):ResultHandler{
			var service:RemoteObject = createService();
			service.removeSurveyTemplate(long);
			return createResponder(service);
		}
		public function changeSurveyPublication(changeSurveyPublicationCommand:ChangeSurveyPublicationCommand):ResultHandler{
			var service:RemoteObject = createService();
			service.changeSurveyPublication(changeSurveyPublicationCommand);
			return createResponder(service);
		}
		public function changeGroupMembers(changeGroupMembersCommand:ChangeGroupMembersCommand):ResultHandler{
			var service:RemoteObject = createService();
			service.changeGroupMembers(changeGroupMembersCommand);
			return createResponder(service);
		}
		public function removeGroup(long:Number):ResultHandler{
			var service:RemoteObject = createService();
			service.removeGroup(long);
			return createResponder(service);
		}
	}
}
