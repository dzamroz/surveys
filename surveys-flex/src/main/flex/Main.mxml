<?xml version="1.0" encoding="UTF-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
                layout="absolute"
                width="100%"
                height="100%"
                xmlns:view="org.adaptiveplatform.surveys.view.*"
                initialize="onInitialize()"
                creationComplete="onCreationComplete(event)"
                xmlns:components="org.adaptiveplatform.surveys.view.components.*"
                xmlns:usermanagement="org.adaptiveplatform.surveys.view.usermanagement.*"
                xmlns:groupmanagement="org.adaptiveplatform.surveys.view.groupmanagement.*"
                xmlns:groupsignup="org.adaptiveplatform.surveys.view.groupsignup.*"
                xmlns:groupmembersmanagement="org.adaptiveplatform.surveys.view.groupmembersmanagement.*">

    <mx:Metadata>
        [ResourceBundle("adaptive")]
        [ResourceBundle("surveys")]
        [ResourceBundle("validation")]
    </mx:Metadata>

    <mx:Style source="/assets/css/Main.css"/>
    <mx:Script>
        <![CDATA[
        import mx.collections.ArrayCollection;
        import mx.controls.Alert;
        import mx.core.Container;
        import mx.core.FlexGlobals;
        import mx.events.FlexEvent;
        import mx.events.IndexChangedEvent;

        import org.adaptiveplatform.surveys.application.ApplicationContextHolder;
        import org.adaptiveplatform.surveys.application.DefaultApplicationContext;
        import org.adaptiveplatform.surveys.application.ViewStackViewController;
        import org.adaptiveplatform.surveys.view.View;

        private static const OFFLINE_DEBUG:Boolean = false;

        private var context:DefaultApplicationContext;

        private var viewsWithOutNavigation:ArrayCollection = new ArrayCollection(['surveyCreating', 'surveyFilling']);

        private function onInitialize():void {
            var channelName:String = "my-amf";
            var destination:String = "messagebroker/amf";
            var channelUrl:String = getChannel();
            channelUrl = channelUrl + destination;

            if (OFFLINE_DEBUG) {
                ApplicationContextHolder.initializeMockContext(new ViewStackViewController(viewstack));
            } else {
                ApplicationContextHolder.initializeRemoteContext(new ViewStackViewController(viewstack), channelName, channelUrl);
            }
        }

        private function onCreationComplete(event:FlexEvent):void {
            ApplicationContextHolder.context.view.goto(View.LOGIN);
        }

        private function getChannel():String {
            var hostUrl:String = this.parameters.serverUrl;
            if (hostUrl == null) {
                var baseUrl:String = Main(FlexGlobals.topLevelApplication).url;
                var pattern:RegExp = new RegExp("http://[^/]*/");
                if (pattern.test(baseUrl) == true) {
                    hostUrl = pattern.exec(baseUrl).toString();
                } else {
                    hostUrl = "http://localhost:8080/"; //default host url
                }
            }
            return hostUrl;
        }

        private function registerView(event:FlexEvent):void {
            var view:IEventDispatcher = IEventDispatcher(event.target);
            view.addEventListener(FlexEvent.UPDATE_COMPLETE, onUpdateComplete);
        }

        private function onUpdateComplete(event:FlexEvent):void {
            var target:Object = event.currentTarget;
            if (target.data != null) {
                trace("view has been updated with: " + target.data);
                if (target.hasOwnProperty("initializeView")) {
                    var f:Function = target.initializeView;
                    var arguments:Array = target.data;
                    f.apply(target, arguments);
                }
                target.data = null;
            }
        }

        private function onViewChange(event:IndexChangedEvent):void {
            navigation.onUpdateComplete();
            userInfo.onUpdateComplete();
            navigation.visible = navigationVisible();
        }

        private function navigationVisible():Boolean {
            return !viewsWithOutNavigation.contains(Container(viewstack.selectedChild).id);
        }
        ]]>
    </mx:Script>
    <mx:VBox height="100%"
             width="100%"
             horizontalAlign="center"
             verticalAlign="middle"
             verticalGap="15">
        <mx:ApplicationControlBar id="applicationControlBar"
                                  width="80%"
                                  height="46"
                                  verticalGap="0">
            <components:NavigationBar id="navigation"
                                      horizontalAlign="left"/>
            <components:Title text="{resourceManager.getString('adaptive', 'title.' + viewstack.selectedChild.name)}"
                              width="100%"/>
            <components:UserInformation id="userInfo"
                                        horizontalAlign="right"/>
        </mx:ApplicationControlBar>

        <mx:Panel width="95%"
                  height="90%"
                  headerHeight="10">
            <mx:ViewStack id="viewstack"
                          width="100%"
                          height="100%"
                          change="onViewChange(event)">
                <mx:Box/>
                <view:Login id="login"
                            creationComplete="registerView(event)"/>
                <view:RegisterUser id="registerUser"
                                   creationComplete="registerView(event)"/>
                <view:SurveyTemplateList id="surveyTemplateList"
                                         creationComplete="registerView(event)"/>
                <view:SurveyFilling id="surveyFilling"
                                    creationComplete="registerView(event)"/>
                <usermanagement:UserManagementView id="usersList"
                                                   creationComplete="registerView(event)"/>
                <groupmembersmanagement:GroupMembersManagementView id="groupMembersManagement"
                                                                   creationComplete="registerView(event)"/>
                <groupmanagement:GroupManagementView id="groupManagement"
                                                     creationComplete="registerView(event)"/>
                <view:SubmittedSurveyDetails id="submittedSurveyDetails"
                                             creationComplete="registerView(event)"/>
                <view:SurveyCreating id="surveyCreating"
                                     creationComplete="registerView(event)"/>
                <view:SurveyPublication id="surveyPublication"
                                        creationComplete="registerView(event)"/>
                <view:PublicationDetails id="surveyPublicationDetails"
                                         creationComplete="registerView(event)"/>
                <view:ResearchList id="researchList"
                                   creationComplete="registerView(event)"/>
                <view:ResearchWizzard id="researchWizzard"
                                      creationComplete="registerView(event)"/>
                <view:EvaluatorStartPage id="evaluatorStartPage"
                                         creationComplete="registerView(event)"/>
                <mx:Canvas id="groupSignup"
                           creationComplete="registerView(event)">
                    <groupsignup:GroupSignupView/>
                </mx:Canvas>
            </mx:ViewStack>
        </mx:Panel>
        <mx:Image id="loader1" source="@Embed(source='assets/images/baner_projektu.png')"/>
    </mx:VBox>
</mx:Application>
